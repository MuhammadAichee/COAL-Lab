INCLUDE Irvine32.inc
.data
array byte 1,2,3,4,5
.code
main PROC
MOV EBX, 0
MOV EAX, 0
MOV esi, 0
MOV ECX, 5
L1:
ADD AL, array[esi]
;ADD AL, BL
INC esi
loop L1
Call WriteDec
exit
main ENDP
END main




INCLUDE Irvine32.inc
.data
counter BYTE 0
.code
main PROC
mov ECX, 5
outer:
	mov eax, ecx
	mov ecx, 10
	inner:
	 inc counter
	loop inner
	mov ecx,eax
loop outer
Call WriteDec
exit
main ENDP
END main





INCLUDE Irvine32.inc
.data
array DWORD 10, 20, 30, 40, 50
.code
main PROC
mov ecx, 5
mov esi, 2
mov EAX, array[esi * TYPE array]



exit
main ENDP
END main







INCLUDE Irvine32.inc
.data
array DWORD 12345678h
.code
main PROC
mov ebx, 0
mov bl,BYTE ptr array
mov EDX, 0
mov dx, word ptr [array+1]
mov ecx, 5
mov esi, 2
mov EAX, array[esi * TYPE array]



exit
main ENDP
END main






INCLUDE Irvine32.inc
.data
msg BYTE "HELLO WORLD", 0
.code
main PROC
call myproc



exit
main ENDP

myproc PROC
mov edx, OFFSET msg
mov ECX, LENGTHOF msg
call WriteString



ret
myproc ENDP 



END main







INCLUDE Irvine32.inc
.data
msg BYTE "HELLO WORLD", 0
.code
main PROC
;call myproc
mov eax, 0
mov AL, 10
call merafunction
exit
main ENDP

myproc PROC
mov edx, OFFSET msg
mov ECX, LENGTHOF msg
call WriteString
ret
myproc ENDP

merafunction PROC
call WriteHex 
ret
merafunction ENDP



END main









INCLUDE Irvine32.inc
.data
var1 DWORD 5
var2 DWORD 10
.code
main PROC
push var1
push var2
call myproc

exit
main ENDP

myproc PROC
push EBP
mov EBP, ESP
mov eax, [ebp]
call WriteDec
call crlf

mov eax, [ebp+4]
call WriteDec
call crlf

mov eax, [ebp+8]
call WriteDec
call crlf
mov eax, [ebp+12]
call WriteDec
call crlf

pop EBP
ret 
myproc ENDP





END main










2 procedure banane hain aik square karega aik cube









INCLUDE Irvine32.inc
.data
var1 DWORD 5
var2 DWORD 10
.code
main PROC
push var1
push var2
call myproc

exit
main ENDP

myproc PROC
push EBP
mov EBP, ESP



mov eax, [ebp+8]
MUL eax
call WriteDec
call crlf
mov ebx, eax
mov eax, [ebp+8]
MUL ebx
call WriteDec
call crlf
mov eax, [ebp+12]
MUL eax
call WriteDec
call crlf
mov ebx, eax
mov eax,[ebp+12]
MUL ebx
call WriteDec
call crlf
pop ebp

ret 
myproc ENDP





END main




