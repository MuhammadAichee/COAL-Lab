INCLUDE Irvine32.inc
.data
val DWORD 8


.code
myproc PROC,
parameter: DWORD
LOCAL loc: DWORD
mov loc, 6
mov eax, parameter
mul loc
call WriteDec
call CRLF
ret
myproc ENDP


main PROC
push val
call  myproc
exit
main ENDP
END main






INCLUDE Irvine32.inc
.data
array1 BYTE 1,1,1,1,1
array2 BYTE 2,2,2,2,2

.code




main PROC
mov esi, OFFSET array1
mov edi, OFFSET array2
mov ecx, LENGTHOF array2
rep movsb

exit
main ENDP
END main







INCLUDE Irvine32.inc
.data
array BYTE 1,2,2,56,11,5
array1 BYTE 'VALUE NOT FOUND', 0
array2 BYTE 'VALUE FOUND', 0

.code
main PROC
mov al, 56
mov edi, offset array
mov ecx, 6
repne scasb
JZ found
JMP A
found:
mov edx, OFFSET array2
call WriteString
call crlf
mov eax, LENGTHOF array
sub eax, ecx
call WriteDec
call crlf
JMP B
A: mov edx, OFFSET array1
call WriteString
call crlf

B: exit
main ENDP
END main





INCLUDE Irvine32.inc
.data
array BYTE 1,2,2,56,11,5
array1 BYTE 'VALUE NOT FOUND', 0
array2 BYTE 'VALUE FOUND', 0

.code
main PROC
mov al, 56
mov edi, offset array
mov ecx, 6
repne scasb
JZ found
JMP A
found:
mov edx, OFFSET array2
call WriteString
call crlf
mov eax, LENGTHOF array
sub eax, ecx
call WriteDec
call crlf
JMP B
A: mov edx, OFFSET array1
call WriteString
call crlf

B: exit
main ENDP
END main



INCLUDE Irvine32.inc
.data
array1 BYTE 'Halooo0',0
array2 BYTE 'World',0

.code
isCompare PROC
push ebp
mov ebp,esp
mov eax,0
mov esi,[ebp+12]
mov edi,[ebp+8]
CMPSB
JA L
call WriteDec
call CRLF
JMP A
L:mov eax,0
add eax,1 
call WriteDec
call CRLF
pop ebp
A:pop ebp
ret
isCompare ENDP

main PROC

lea esi, array1
lea edi, array2
push esi
push edi
call isCompare


exit
main ENDP
END main







INCLUDE Irvine32.inc
.data
array1 BYTE 'Halooo0',0
array2 BYTE 'World',0

.code
isCompare PROC,
D: Dword, Source: Dword
mov eax,0
mov esi,Source
mov edi,D
CMPSB
JA L
call WriteDec
call CRLF
JMP A
L:mov eax,0
add eax,1 
call WriteDec
call CRLF
A:
ret
isCompare ENDP

main PROC

lea esi, array1
lea edi, array2
push esi
push edi
call isCompare


exit
main ENDP
END main